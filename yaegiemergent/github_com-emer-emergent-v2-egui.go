// Code generated by 'yaegi extract github.com/emer/emergent/v2/egui'. DO NOT EDIT.

package yaegiemergent

import (
	"github.com/cogentcore/yaegi/interp"
	"github.com/emer/emergent/v2/egui"
	"reflect"
)

func init() {
	Symbols["github.com/emer/emergent/v2/egui/egui"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ActiveAlways":       reflect.ValueOf(egui.ActiveAlways),
		"ActiveRunning":      reflect.ValueOf(egui.ActiveRunning),
		"ActiveStopped":      reflect.ValueOf(egui.ActiveStopped),
		"Embed":              reflect.ValueOf(interp.GenericFunc("func Embed[S, C any](parent tree.Node) *S { //yaegi:add\n\tcfgC, cfg := NewConfig[C]()\n\n\tcfg.AsBaseConfig().GUI = true // force GUI on\n\n\tsimS := new(S)\n\tsim := any(simS).(Sim[C])\n\n\tsim.SetConfig(cfgC)\n\tsim.ConfigSim()\n\tsim.Init()\n\tsim.ConfigGUI(parent)\n\treturn simS\n}")),
		"NewConfig":          reflect.ValueOf(interp.GenericFunc("func NewConfig[C any]() (*C, Config) { //yaegi:add\n\tcfgC := new(C)\n\tcfg := any(cfgC).(Config)\n\n\terrors.Log(reflectx.SetFromDefaultTags(cfg))\n\tcfg.AsBaseConfig().BaseDefaults()\n\tcfg.Defaults()\n\treturn cfgC, cfg\n}")),
		"NewGUIBody":         reflect.ValueOf(egui.NewGUIBody),
		"ToolGhostingN":      reflect.ValueOf(egui.ToolGhostingN),
		"ToolGhostingValues": reflect.ValueOf(egui.ToolGhostingValues),

		// type definitions
		"BaseConfig":   reflect.ValueOf((*egui.BaseConfig)(nil)),
		"Config":       reflect.ValueOf((*egui.Config)(nil)),
		"GUI":          reflect.ValueOf((*egui.GUI)(nil)),
		"ToolGhosting": reflect.ValueOf((*egui.ToolGhosting)(nil)),
		"ToolbarItem":  reflect.ValueOf((*egui.ToolbarItem)(nil)),

		// interface wrapper definitions
		"_Config": reflect.ValueOf((*_github_com_emer_emergent_v2_egui_Config)(nil)),
	}
}

// _github_com_emer_emergent_v2_egui_Config is an interface wrapper for Config type
type _github_com_emer_emergent_v2_egui_Config struct {
	IValue        interface{}
	WAsBaseConfig func() *egui.BaseConfig
	WDefaults     func()
}

func (W _github_com_emer_emergent_v2_egui_Config) AsBaseConfig() *egui.BaseConfig {
	return W.WAsBaseConfig()
}
func (W _github_com_emer_emergent_v2_egui_Config) Defaults() { W.WDefaults() }
